#!/usr/bin/env python
# -*- coding: utf-8 -*-
# pygame + PyOpenGL version of Nehe's OpenGL lesson04
# Paul Furber 2001 - m@verick.co.za

from OpenGL.GL import *
from OpenGL.GLU import *
import pygame
from pygame.locals import *
import serial
import time
import sys
import re
import math

class PseudoSerial:
    def readline(self):
        return "0 0 0 0 0 0"
    def close(self):
        pass
   
port = "/dev/ttyUSB0"
oneG = 70.0
ser = PseudoSerial()
try:
    ser = serial.Serial(port, 115200, timeout=1)
except serial.SerialException as ex:
    print ex
    
rtri = rquad = 0.0

def getRot(x, y, z):
    """converts the acceleration values for the different axes into rotations in Â°"""
    xrot = yrot = zrot = 0
    """tresh = 0.1
    if abs(y) + abs(z) > tresh:
        xrot = -1 * math.atan2(y, z) / math.pi * 180
    if abs(x) + abs(z) > tresh:
        yrot = math.atan2(x, z) / math.pi * 180
    if abs(x) + abs(y) > tresh:
        zrot = math.atan2(y, x) / math.pi * 180"""

    yrot = 1024 - z 
    return (xrot, yrot, zrot)

def resize((width, height)):
    if height==0:
        height=1
    glViewport(0, 0, width, height)
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(45, 1.0*width/height, 0.1, 100.0)
    glMatrixMode(GL_MODELVIEW)
    glLoadIdentity()

def init():
    glShadeModel(GL_SMOOTH)
    glClearColor(0.0, 0.0, 0.0, 0.0)
    glClearDepth(1.0)
    glEnable(GL_DEPTH_TEST)
    glDepthFunc(GL_LEQUAL)
    glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST)
    rtri = 0.0
    rquad = 0.0

def draw():
    line = ser.readline()
    res = re.findall("(\d+) .+", line)
    print res
    result = []
    if len(res) > 0:
        result = res
    else:
        result = [0, 0, 70]
    x = float(0) 
    y = float(0)
    z = float(result[0])
    print "gravity: %f : %f : %f" % (x, y, z)
    
    rot = getRot(x, y, z)
    print rot
    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
    glLoadIdentity()
    

    glLoadIdentity()
    glTranslatef(0, 0, -6.0)


    glRotatef(rot[0], 0.0, 1.0, 1.0)
    glRotatef(rot[1], 1.0, 0.0, .0)
    glRotatef(0, 0.0, 0.0, 1.0)

    glColor3f(0.5, 0.5, 1.0)
    glBegin(GL_QUADS)
    glVertex3f(-1.0, 1.0, 1.0)
    glVertex3f(1.0, 1.0, 1.0)
    glColor3f(1.0, 0.5, 0.5)
    glVertex3f(1.0, 1.0, -1.0)
    glVertex3f(-1.0, 1.0, -1.0)
    glEnd()

def main():

    video_flags = OPENGL|DOUBLEBUF
    
    pygame.init()
    pygame.display.set_mode((640,480), video_flags)

    resize((640,480))
    init()

    frames = 0
    ticks = pygame.time.get_ticks()
    while 1:
        event = pygame.event.poll()
        if event.type == QUIT or (event.type == KEYDOWN and event.key == K_ESCAPE):
            break
        
        draw()
        pygame.display.flip()
        frames = frames+1
        
    ser.close() 
    print "fps:  %d" % ((frames*1000)/(pygame.time.get_ticks()-ticks))


if __name__ == '__main__': main()

